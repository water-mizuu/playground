{
    "sourceFile": "bin/math/parts/matrix/element_wise.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1698396659467,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1698396659467,
            "name": "Commit-0",
            "content": "part of \"../../matrix.dart\";\r\n\r\nclass ElementWiseNumericalMatrixProxy extends Iterable<Scalar> {\r\n\r\n  ElementWiseNumericalMatrixProxy(this.parent);\r\n  final NumericalMatrix parent;\r\n\r\n  Iterable<Scalar> get _iterable sync* {\r\n    for (List<Scalar> row in parent.data) {\r\n      yield* row;\r\n    }\r\n  }\r\n\r\n  @override\r\n  Iterator<Scalar> get iterator => _iterable.iterator;\r\n\r\n  NumericalMatrix operator +(Scalar right) => parent.matrixMap((Scalar left) => left + right);\r\n  NumericalMatrix operator -(Scalar right) => parent.matrixMap((Scalar left) => left - right);\r\n  NumericalMatrix operator /(Scalar right) => parent.matrixMap((Scalar left) => left / right);\r\n  NumericalMatrix operator *(Scalar right) => parent.matrixMap((Scalar left) => left * right);\r\n  NumericalMatrix operator %(Scalar right) => parent.matrixMap((Scalar left) => left % right);\r\n  NumericalMatrix operator ~/(Scalar right) => parent.matrixMap((Scalar left) => left ~/ right);\r\n}\r\n"
        }
    ]
}